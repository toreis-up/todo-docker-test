/* tslint:disable */
/* eslint-disable */
/**
 * API V1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TodosGet200Response,
  TodosGet200ResponseItemsInner,
} from '../models/index';
import {
    TodosGet200ResponseFromJSON,
    TodosGet200ResponseToJSON,
    TodosGet200ResponseItemsInnerFromJSON,
    TodosGet200ResponseItemsInnerToJSON,
} from '../models/index';

export interface TodosIdDeleteRequest {
    id: number;
}

export interface TodosIdGetRequest {
    id: number;
}

export interface TodosIdPatchRequest {
    id: number;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Retrieves all todos
     */
    async todosGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TodosGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodosGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Retrieves all todos
     */
    async todosGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TodosGet200Response> {
        const response = await this.todosGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Remove todo
     */
    async todosIdDeleteRaw(requestParameters: TodosIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling todosIdDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Remove todo
     */
    async todosIdDelete(requestParameters: TodosIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.todosIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Retrieves todo
     */
    async todosIdGetRaw(requestParameters: TodosIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TodosGet200ResponseItemsInner>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling todosIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodosGet200ResponseItemsInnerFromJSON(jsonValue));
    }

    /**
     * Retrieves todo
     */
    async todosIdGet(requestParameters: TodosIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TodosGet200ResponseItemsInner> {
        const response = await this.todosIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update todo
     */
    async todosIdPatchRaw(requestParameters: TodosIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TodosGet200ResponseItemsInner>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling todosIdPatch.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/todos/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TodosGet200ResponseItemsInnerFromJSON(jsonValue));
    }

    /**
     * Update todo
     */
    async todosIdPatch(requestParameters: TodosIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TodosGet200ResponseItemsInner> {
        const response = await this.todosIdPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
